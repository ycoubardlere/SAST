Run started:2024-01-23 14:21:53.004433

Test results:
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:4:8
3	# bad
4	query = "SELECT * FROM foo WHERE id = '%s'" % identifier
5	query = "INSERT INTO foo VALUES ('a', 'b', '%s')" % value

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:5:8
4	query = "SELECT * FROM foo WHERE id = '%s'" % identifier
5	query = "INSERT INTO foo VALUES ('a', 'b', '%s')" % value
6	query = "DELETE FROM foo WHERE id = '%s'" % identifier

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:6:8
5	query = "INSERT INTO foo VALUES ('a', 'b', '%s')" % value
6	query = "DELETE FROM foo WHERE id = '%s'" % identifier
7	query = "UPDATE foo SET value = 'b' WHERE id = '%s'" % identifier

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:7:8
6	query = "DELETE FROM foo WHERE id = '%s'" % identifier
7	query = "UPDATE foo SET value = 'b' WHERE id = '%s'" % identifier
8	query = """WITH cte AS (SELECT x FROM foo)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:8:8
7	query = "UPDATE foo SET value = 'b' WHERE id = '%s'" % identifier
8	query = """WITH cte AS (SELECT x FROM foo)
9	SELECT x FROM cte WHERE x = '%s'""" % identifier
10	# bad alternate forms

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:11:8
10	# bad alternate forms
11	query = "SELECT * FROM foo WHERE id = '" + identifier + "'"
12	query = "SELECT * FROM foo WHERE id = '{}'".format(identifier)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:12:8
11	query = "SELECT * FROM foo WHERE id = '" + identifier + "'"
12	query = "SELECT * FROM foo WHERE id = '{}'".format(identifier)
13	query = "SELECT * FROM foo WHERE id = '[VALUE]'".replace("[VALUE]", identifier)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:16:12
15	# bad
16	cur.execute("SELECT * FROM foo WHERE id = '%s'" % identifier)
17	cur.execute("INSERT INTO foo VALUES ('a', 'b', '%s')" % value)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:17:12
16	cur.execute("SELECT * FROM foo WHERE id = '%s'" % identifier)
17	cur.execute("INSERT INTO foo VALUES ('a', 'b', '%s')" % value)
18	cur.execute("DELETE FROM foo WHERE id = '%s'" % identifier)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:18:12
17	cur.execute("INSERT INTO foo VALUES ('a', 'b', '%s')" % value)
18	cur.execute("DELETE FROM foo WHERE id = '%s'" % identifier)
19	cur.execute("UPDATE foo SET value = 'b' WHERE id = '%s'" % identifier)

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:19:12
18	cur.execute("DELETE FROM foo WHERE id = '%s'" % identifier)
19	cur.execute("UPDATE foo SET value = 'b' WHERE id = '%s'" % identifier)
20	# bad alternate forms

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:21:12
20	# bad alternate forms
21	cur.execute("SELECT * FROM foo WHERE id = '" + identifier + "'")
22	cur.execute("SELECT * FROM foo WHERE id = '{}'".format(identifier))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:22:12
21	cur.execute("SELECT * FROM foo WHERE id = '" + identifier + "'")
22	cur.execute("SELECT * FROM foo WHERE id = '{}'".format(identifier))
23	cur.execute("SELECT * FROM foo WHERE id = '[VALUE]'".replace("[VALUE]", identifier))

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:26:12
25	# bad f-strings
26	cur.execute(f"SELECT {column_name} FROM foo WHERE id = 1")
27	cur.execute(f"SELECT {a + b} FROM foo WHERE id = 1")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:27:12
26	cur.execute(f"SELECT {column_name} FROM foo WHERE id = 1")
27	cur.execute(f"SELECT {a + b} FROM foo WHERE id = 1")
28	cur.execute(f"INSERT INTO {table_name} VALUES (1)")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:28:12
27	cur.execute(f"SELECT {a + b} FROM foo WHERE id = 1")
28	cur.execute(f"INSERT INTO {table_name} VALUES (1)")
29	cur.execute(f"UPDATE {table_name} SET id = 1")

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:29:12
28	cur.execute(f"INSERT INTO {table_name} VALUES (1)")
29	cur.execute(f"UPDATE {table_name} SET id = 1")
30	

--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Low
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.7.6/plugins/b608_hardcoded_sql_expressions.html
   Location: 5.py:43:4
42	
43	a()("SELECT %s FROM foo" % val)
44	

--------------------------------------------------

Code scanned:
	Total lines of code: 105
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 18
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 8
		Medium: 10
		High: 0
Files skipped (0):
